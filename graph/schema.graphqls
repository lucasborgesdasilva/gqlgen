type Category {
  id: ID!
  name: String!
  description: String
  courses: [Course!]!
}

type Course {
  id: ID!
  name: String!
  description: String
  category: Category!
}

# O input é usado para definir os tipos de dados de entrada.
input newCategory {
  name: String!
  description: String
}

input newCourse {
  name: String!
  description: String
  categoryId: ID!
}

# As consultas (queries) permitem buscar dados do servidor.
type Query {
  categories: [Category!]!
  courses: [Course!]!
}

# As mutações (mutations) permitem modificar dados no servidor.
type Mutation {
  createCategory(input: newCategory!): Category!
  createCourse(input: newCourse!): Course!
}